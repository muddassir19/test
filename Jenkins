//@Library("sharedLibrary") _
pipeline{
    agent any

    stages {
        stage('Maven Build') {
          steps {
            sh 'mvn clean package'
          }
        }
        /*stage('Sonar Analaysis'){
          steps{
            withSonarQubeEnv('sonar7') {
                 sh 'mvn sonar:sonar'   
                }
                waitForQualityGate abortPipeline: False, credentialsId: 'sonartoken'
          }
        } */
        stage('Deploy  tomcat using shared library') {
          steps {
             sshagent(['tomcat-server']) {
             
              sh 'scp -o StrictHostKeyChecking=no  target/*.war ec2-user@172.31.11.20:/opt/tomcat8/webapps/web.war'
             //tomcatDeploy('172.31.11.20','app','tomcatnew')
             }
          }
        }
        stage('Build docker image'){
          steps{
            sh 'docker build -t muddassir19/web:1.0.0 .'
          }
        }
    }
}
